{"version":3,"sources":["Box3D.js","Photo.js","app.js"],"names":["Box3D","obj","_classCallCheck","this","varDebounce","сountdownAnim","card","document","querySelector","trees__left","trees__right","layerFarWall","card__container","tiltAngle","axialDisplacement","addEventListener","mainAnimate","bind","el","removeAttribute","clearTimeout","setTimeout","e","getBoundingClientRect","offset_x","offsetX","layerX","x","rect","width","height","y","_this","elementDirectionalShift","style","transform","boxShadow","target","clearTagStyle","concat","Photo","glass","block_parent","polygon_rand","living_figure","relativeCoords","classList","contains","remove","arr_polygon","Math","floor","random","length","setInterval","clipPath","c","z","a","b","bounds","clientX","left","clientY","top","add","backgroundPositionX","backgroundPositionY","window","objCard3D","objGrayScale2","objGrayScale3","objGrayScale6"],"mappings":"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","file":"app.min.js","sourcesContent":["class Box3D { /* Анимация, - \"Ожившее фото\" */\r\n    constructor(obj) {\r\n        this.varDebounce = 0; // ТаймАут срабатывания всей анимации\r\n        this.сountdownAnim = 0; // ТаймАут срабатывания всей анимации\r\n        this.card = document.querySelector(obj.card); // Анимируемый блок\r\n        this.trees__left = document.querySelector(obj.trees__left); // Дерево слева\r\n        this.trees__right = document.querySelector(obj.trees__right); // Дерево справа\r\n        this.layerFarWall = document.querySelector(obj.layerFarWall); // Задняя стена с тенью\r\n        this.card__container = document.querySelector(obj.card__container); // Блок контейнер\r\n        this.tiltAngle = obj.tiltAngle || 10; // угол отклонения в градусах\r\n        this.axialDisplacement = obj.axialDisplacement || 50; // Смещение по оси Z\r\n\r\n        this.card__container.addEventListener('mousemove', this.mainAnimate.bind(this));\r\n    }\r\n\r\n    clearTagStyle(el) {\r\n        el.removeAttribute('style')\r\n    }\r\n\r\n    mainAnimate(e) {\r\n        clearTimeout(this.varDebounce);\r\n        clearTimeout(this.сountdownAnim);\r\n        this.varDebounce = setTimeout(() => {\r\n            let rect = e.target.getBoundingClientRect();\r\n            let offset_x = e.offsetX || e.layerX\r\n            let offset_y = e.offsetY || e.layerY\r\n            let x = 100 * offset_x / rect.width;\r\n            let y = 100 * offset_y / rect.height;\r\n\r\n            if (x < 50 && y < 50) { // Левый верхний угол\r\n                this.elementDirectionalShift(this.tiltAngle, -this.tiltAngle, -8, 10)\r\n                this.layerFarWall.style.boxShadow = `8px 5px 20px #000, 12px 10px 40px rgba(0,0,0, .35), 13px 15px 50px rgba(0, 0, 0, .93)`;\r\n                this.trees__left.style.transform = `translate(350px, -190px) scale(1.4)`\r\n                this.trees__right.style.transform = `translate(-390px,-200px) scale(1.4)`\r\n            } else if (x > 50 && y < 50) { // Правый верхний угол\r\n                this.elementDirectionalShift(this.tiltAngle, this.tiltAngle, -8, -10)\r\n                this.layerFarWall.style.boxShadow = `-8px 5px 20px #000, -12px 10px 40px rgba(0, 0, 0, .35), -13px 15px 50px rgba(0, 0, 0, .93)`;\r\n                this.trees__left.style.transform = `translate(370px, -190px) scale(1.4)`\r\n                this.trees__right.style.transform = `translate(-370px, -200px) scale(1.4)`\r\n            } else if (x < 50 && y > 50) { // Левый нижний угол\r\n                this.elementDirectionalShift(-this.tiltAngle, -this.tiltAngle, 8, -10)\r\n                this.layerFarWall.style.boxShadow = `8px -5px 20px #000, 12px -10px 40px rgba(0, 0, 0, .35), 13px -15px 50px rgba(0, 0, 0, .93)`;\r\n                this.trees__left.style.transform = `translate(350px,-170px) scale(1.4)`\r\n                this.trees__right.style.transform = `translate(-390px,-180px) scale(1.4)`\r\n            } else if (x > 50 && y > 50) { // Правый нижний угол\r\n                this.elementDirectionalShift(-this.tiltAngle, this.tiltAngle, 8, 10)\r\n                this.layerFarWall.style.boxShadow = `-8px -5px 20px #000, -12px -10px 40px rgba(0, 0, 0, .35), -13px -15px 50px rgba(0, 0, 0, .93)`;\r\n                this.trees__left.style.transform = `translate(370px,-170px) scale(1.4)`\r\n                this.trees__right.style.transform = `translate(-380px, -180px) scale(1.4)`\r\n            }\r\n\r\n        }, 10);\r\n\r\n        this.сountdownAnim = setTimeout(() => {\r\n            this.clearTagStyle(this.card)\r\n            this.clearTagStyle(this.trees__left)\r\n            this.clearTagStyle(this.trees__right)\r\n            this.clearTagStyle(this.layerFarWall)\r\n        },3000)\r\n    }\r\n\r\n    elementDirectionalShift(x, y) {\r\n        this.card.style.transform = `perspective(1200px) rotateX(${x}deg) rotateY(${y}deg) translateZ(200px)`;\r\n    }\r\n}","class Photo { /* Анимация, - \"Цветной зум\" */\r\n    constructor(obj) {\r\n        this.glass = document.querySelector(obj.glass);\r\n        this.block_parent = document.querySelector(obj.block_parent);\r\n\r\n        this.polygon_rand = obj.polygon_rand;\r\n        this.living_figure = obj.living_figure;\r\n\r\n        this.block_parent.addEventListener('mousemove', this.relativeCoords.bind(this));\r\n        this.block_parent.addEventListener('mouseleave', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');\r\n        this.block_parent.addEventListener('mouseout', () => (this.glass.classList.contains('opacityShow')) ? this.glass.classList.remove('opacityShow') : '');\r\n\r\n        this.arr_polygon = [\r\n            '0% 15%, 22% 23%, 15% 0%, 85% 0%, 77% 23%, 100% 15%, 100% 85%, 75% 76%, 85% 100%, 15% 100%, 23% 77%, 0% 85%',\r\n            '98% 19%, 86% 33%, 98% 61%, 80% 69%, 96% 82%, 80% 99%, 38% 88%, 20% 94%, 0 86%, 15% 74%, 0 66%, 9% 46%, 0 30%, 18% 13%, 10% 4%, 30% 2%, 50% 8%, 62% 1%, 84% 4%)',\r\n            '50% 0%, 69% 23%, 98% 35%, 75% 61%, 79% 91%, 48% 78%, 21% 91%, 20% 60%, 2% 35%, 28% 25%',\r\n            '24% 14%, 74% 14%, 100% 50%, 74% 88%, 26% 88%, 0% 50%',\r\n            '50% 0%, 100% 50%, 50% 100%, 0% 50%',\r\n            '20% 0%, 0% 20%, 15% 49%, 0% 80%, 20% 100%, 48% 91%, 80% 100%, 100% 80%, 83% 50%, 100% 20%, 80% 0%, 49% 13%',\r\n            '50% 0%, 80% 10%, 100% 35%, 100% 70%, 80% 90%, 50% 100%, 20% 90%, 0% 70%, 0% 35%, 20% 10%'\r\n        ];\r\n\r\n        if(this.polygon_rand) {\r\n            this.glass.style.clipPath = `polygon(${this.arr_polygon[Math.floor(Math.random() * (this.arr_polygon.length + 1))]})`;\r\n        }\r\n\r\n        if (this.living_figure) {\r\n            setInterval(() => {\r\n                let a = Math.floor(Math.random() * 10)\r\n                let b = Math.floor(Math.random() * 10)\r\n                let c = Math.floor(Math.random() * 10)\r\n                let x = Math.floor(Math.random() * 10)\r\n                let y = Math.floor(Math.random() * 10)\r\n                let z = Math.floor(Math.random() * 10)\r\n                this.glass.style.clipPath = `polygon(9${x}% 1${z}%, 8${y}% 3${x}%, 9${z}% 6${y}%, 8${z}% 6${x}%, 9${a}% 8${b}%, 8${x}% 9${z}%, 3${y}% 8${x}%, 2${b}% 9${z}%, 0 8${y}%, 1${a}% 7${z}%, ${b}% 6${x}%, 9% 4${y}%, ${c}% 3${a}%, 1${x}% 1${z}%, 1${y}% ${c}%, 3${x}% ${a}%, 5${z}% ${y}%, 6${z}% ${x}%, 8${z}% ${x}%)`;\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    relativeCoords(e) {\r\n        let bounds = e.target.getBoundingClientRect();\r\n        let x = (e.clientX - 100) - bounds.left;\r\n        let y = (e.clientY - 100) - bounds.top;\r\n        (!this.glass.classList.contains('opacityShow')) ? this.glass.classList.add('opacityShow') : '';\r\n        this.glass.style.left = x + 'px';\r\n        this.glass.style.top = y + 'px';\r\n        this.glass.style.backgroundPositionX = -x + 'px';\r\n        this.glass.style.backgroundPositionY = -y + 'px';\r\n    }\r\n}","window.addEventListener('load', () => {\r\n\r\n    let objCard3D = {\r\n        card: '.card__box', // Анимируемый блок\r\n        card__container: '.card__container', // Блок контейнер\r\n        layerFarWall: '.layerFarWall', // Задняя стеня с тенью\r\n        trees__left: '.trees_left', // Дерево слева\r\n        trees__right: '.trees_right', // Дерево справа\r\n        tiltAngle: 7, // угол отклонения в градусах\r\n        axialDisplacement: 40, // Смещение по оси Z || Каждый новый слой смещается на (i++ + 1) * axialDisplacement px\r\n    }\r\n    new Box3D(objCard3D);\r\n\r\n    // Анимация, - \"Цвета жизни\"\r\n    let objGrayScale1 = {\r\n        glass: '.glass-search1',\r\n        block_parent: '.anim-photo1',\r\n        living_figure: true, // Изменющиеся полигоны\r\n    };\r\n    new Photo(objGrayScale1);\r\n\r\n    let objGrayScale2 = {\r\n        glass: '.glass-search2',\r\n        block_parent: '.anim-photo2',\r\n        polygon_rand: true // Рандомная фигура по default = false\r\n    };\r\n    new Photo(objGrayScale2);\r\n\r\n    let objGrayScale3 = {\r\n        glass: '.glass-search3',\r\n        block_parent: '.anim-photo3',\r\n    };\r\n    new Photo(objGrayScale3);\r\n\r\n    let objGrayScale4 = {\r\n        glass: '.glass-search4',\r\n        block_parent: '.anim-photo4',\r\n    };\r\n    new Photo(objGrayScale4);\r\n\r\n    let objGrayScale5 = {\r\n        glass: '.glass-search5',\r\n        block_parent: '.anim-photo5',\r\n    };\r\n    new Photo(objGrayScale5);\r\n\r\n    let objGrayScale6 = {\r\n        glass: '.glass-search6',\r\n        block_parent: '.anim-photo6',\r\n    };\r\n    new Photo(objGrayScale6);\r\n})\r\n"]}